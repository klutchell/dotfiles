#!/usr/bin/env bash

set -euo pipefail

# capture script exit
cleanup()
{
	local rc=$?
	info "exited with error level ${rc}"
	exit ${rc}
}

# get the command name without path
cmd()	{ basename "${0}" ; }

# determine absolute path to a provided file/folder
abs()	{ echo "$(cd "$(dirname "${1}")" && pwd)/$(basename "${1}")"; }

# append timestamp and loglevel prints
debug()		{ if [ "${debug_enabled:-}" == "true" ]; then 
			  echo "$(date)  [DEBUG]   $*" ; fi ; }
info()		{ echo "$(date)  [INFO]    $*" ; }
warning()	{ echo "$(date)  [WARNING] $*" ; }
error()		{ echo "$(date)  [ERROR]   $*" ; }
fatal()		{ echo "$(date)  [FATAL]   $*" ; exit 1 ; }

usage()
{
    cat <<EOF

Usage:
                $(cmd) <github_username> <github_keyname>
Description:
                Clone dotfiles repo from github and install with stow.
                Suggest running githubkeygen first to allow cloning via SSH.
                curl https://raw.githubusercontent.com/klutchell/dotfiles/master/bin/bin/githubkeygen | bash
Examples:
                $(cmd) --help
                $(cmd) --debug
Parameters:
                github_username     github username for syncing SSH keys

                github_pubkey       existing github public key

                --help              display this help message

                --debug             enable debug logs

EOF
exit 2
}


# exit here if this script was sourced
[[ "${BASH_SOURCE[0]:-${0}}" != "${0}" ]] && return

# trap any exit code beyond this point
trap cleanup INT TERM EXIT

# set defaults
debug_enabled="false"
dotfiles_clone_dir="$(abs ~/dotfiles)"

# catch help param
expr "$*" : ".*--help" > /dev/null && usage

# catch debug param
expr "$*" : ".*--debug" > /dev/null && debug_enabled="true"

# read github username from params
github_username="${1:-}"

# read github keyname from params
github_pubkey="${2:-}"


# WORK START


# prompt for github username if not provided
while [ -z "${github_username:-}" ]
do
    read -p "github username: " github_username < /dev/tty
done

# prompt for github username if not provided
while [ -z "${github_pubkey:-}" ]
do
    read -e -p "github public key: " -i "$(abs ~/.ssh/id_rsa.${github_username}@github.com.pub)" github_pubkey < /dev/tty
done

[ -f "${github_pubkey}" ] || fatal "github public key '${github_pubkey}' not found"



# update package sources
info "updating package sources..."
sudo apt-get update -y

# install git, make, and stow
info "installing git, make, and stow..."
sudo apt-get install git make stow -y ||
	fatal "some utilities failed to install"



# clone dotfiles repo (synced ssh key required)
info "cloning dotfiles repo to '${dotfiles_clone_dir}'..."
git clone "git@github.com:${github_username}/dotfiles.git" "${dotfiles_clone_dir}" ||
	fatal "cloning dotfiles repo failed"

# install dotfiles
info "installing dotfiles in '$(abs ~)'..."
(cd "${dotfiles_clone_dir}"
make install || fatal "installing dotfiles failed"
)

info "done!"
