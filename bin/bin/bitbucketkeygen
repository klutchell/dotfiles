#!/usr/bin/env bash

set -euo pipefail

# capture script exit
cleanup()
{
	local rc=$?
	info "exited with error level ${rc}"
	exit ${rc}
}

# get the command name without path
cmd()	{ basename "${0}" ; }

# determine absolute path to a provided file/folder
abs()	{ echo "$(cd "$(dirname "${1}")" && pwd)/$(basename "${1}")"; }

# append timestamp and loglevel prints
debug()		{ if [ "${debug_enabled:-}" == "true" ]; then 
			  echo "$(date)  [DEBUG]   $*" ; fi ; }
info()		{ echo "$(date)  [INFO]    $*" ; }
warning()	{ echo "$(date)  [WARNING] $*" ; }
error()		{ echo "$(date)  [ERROR]   $*" ; }
fatal()		{ echo "$(date)  [FATAL]   $*" ; exit 1 ; }

usage()
{
    cat <<EOF

Usage:
                $(cmd) <bitbucket_username> <bitbucket_keyname>
Description:
                Generate bitbucket rsa key for SSH authentication.
Examples:
                $(cmd) kharding id_rsa.kharding@bitbucket.com
                $(cmd) --debug
Parameters:
                bitbucket_username     bitbucket username for syncing SSH keys

                bitbucket_keyname      custom bitbucket keyname

                --help                 display this help message

                --debug                enable debug logs

EOF
exit 2
}


# return here if this script was sourced
[[ "${BASH_SOURCE[0]:-${0}}" != "${0}" ]] && return

# trap any exit code beyond this point
trap cleanup INT TERM EXIT

# set defaults
debug_enabled="false"

# catch help param
expr "$*" : ".*--help" > /dev/null && usage

# catch debug param
expr "$*" : ".*--debug" > /dev/null && debug_enabled="true"

# read bitbucket username from params
bitbucket_username="${1:-}"

# read bitbucket keyname from params
bitbucket_keyname="${2:-}"


# WORK START


# prompt for bitbucket username if not provided
while [ -z "${bitbucket_username:-}" ]
do
	read -p "bitbucket username: " bitbucket_username < /dev/tty
done

# prompt for bitbucket username if not provided
while [ -z "${bitbucket_keyname:-}" ]
do
	read -e -p "bitbucket keyname: " -i "id_rsa.${bitbucket_username}@bitbucket.com" bitbucket_keyname < /dev/tty
done


bitbucket_privkey="$(abs ~/.ssh/${bitbucket_keyname})"
bitbucket_pubkey="$(abs ~/.ssh/${bitbucket_keyname}.pub)"
pubkey_comment="${bitbucket_keyname/id_rsa\./} ($(id -un)@$(hostname))"


# check bitbucket ssh-rsa key exists
info "checking for existing public bitbucket ssh-rsa key..."
if [ -f "${bitbucket_pubkey}" ]
then
	# use existing bitbucket ssh-rsa key
	info "found '${bitbucket_pubkey}'"
else
	# generate bitbucket ssh-rsa key
	info "generating 4096-bit ssh-rsa key..."
	ssh-keygen -C "${pubkey_comment}" -f "${bitbucket_privkey}" -N '' -t "rsa" -b "4096" ||
		fatal "generating ssh-rsa key failed"
fi


info "done!"
